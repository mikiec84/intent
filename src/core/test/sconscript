Import('test_env')
Import('foundation')
Import('core')
Import('gmock')
Import('gtest')
Import('jsoncpp')
Import('zmq')

# Build all .cpp files in this folder into a single binary.
sources = Glob('*.cpp')
sources.extend(Glob('#/src/external/gmock/gtest/src/gtest_main.cc'))

'''
The order of libs matters here; if we link against base before domain, we get
unresolved externals for any symbols that the testrunner binary does not
directly depend on, due to a change in the behavior of ld. You can google
ld's "--as-needed" flag (which is now on by default) for more info.

Our fix is to specify the most dependent libs first, and the most ndependent
libs last. Or we could add -Wl,--no-as-needed to the linker line.

For more info, see: 
    http://bit.ly/1h1vYpD
    http://www.gentoo.org/proj/en/qa/asneeded.xml
'''
libs = [core, foundation, jsoncpp, zmq, gmock, gtest, 'pthread']
import platform
if platform.uname()[0] != 'Darwin':
    libs.append('rt')

testrunner = test_env.Program(target='core-testrunner', source=sources, 
    LIBS=libs)

Return('testrunner')
