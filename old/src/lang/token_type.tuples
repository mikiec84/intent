// No sentry. Don't add one!

//tuple( number, name, example, comment )

// structural
tuple( 0x00000000, none, "\x0", "placeholder or uninitialized token value" )
tuple( 0x00000001, error, "<error>", "represents a tokenization error, typically caused by invalid syntax" )
tuple( 0x00000002, indent, "\t", "increase nesting" )
tuple( 0x00000003, dedent, "\x08", "decrease nesting" )
tuple( 0x00000004, line_break, "\n", "separate one line from another" )
tuple( 0x00000005, soft_break, "... ", "continue current statement on new line" )
tuple( 0x00000006, noun, "foo", "" )
tuple( 0x00000007, verb, "Do something", "" )

// keywords
tuple( 0x00001000, keyword_mask, "", "" )
tuple( 0x00001001, if, "if", "" )
tuple( 0x00001002, else, "else", "" )
tuple( 0x00001003, end, "end", "assert end of block" )
tuple( 0x00001004, while, "while", "" )
tuple( 0x00001005, handle, "handle", "" )
tuple( 0x00001006, when, "when", "" )
tuple( 0x00001007, try, "try", "" )
tuple( 0x00001008, catch, "catch", "" )
tuple( 0x00001009, finally, "finally", "" )
tuple( 0x0000100a, return, "return", "" )

// literals
tuple( 0x00002000, literal_mask, "", "" )
// numbers
tuple( 0x00002100, number_literal_mask, "", "" )
tuple( 0x00002101, binary_number, "0b0111001", "" )
tuple( 0x00002102, decimal_number, "42", "" )
tuple( 0x00002103, hex_number, "0xdeadbeef", "" )
tuple( 0x00002104, octal_number, "033", "" )
tuple( 0x00002105, floating_point_number, "3.14159", "" )
// strings
tuple( 0x00002200, string_literal_mask, "", "" )
tuple( 0x00002201, quoted_string, "\"abc\"", "" )
tuple( 0x00002202, char_literal, "", "" )
tuple( 0x00002203, regex, "", "" )
// dates
tuple( 0x00002400, date_literal_mask, "", "" )
tuple( 0x00002401, iso8601_date, "2014-06-12 8:25:00.12345Z", "" )
tuple( 0x00002402, epoch_date, "1970+23y4m2d", "" )
tuple( 0x00002403, duration, "5h3m2s", "" )

// comments
tuple( 0x00004000, comment_mask, "", "" )
tuple( 0x00004001, comment, "#", "" )
tuple( 0x00004002, doc_comment, "###", "" )
tuple( 0x00004003, heredoc, "", "" )
tuple( 0x00004004, explanation, "", "" )

// operators have additional semantics and are defined in operator_tuples.h
tuple( 0x00008000, operator_mask, "", "" )

#undef tuple

